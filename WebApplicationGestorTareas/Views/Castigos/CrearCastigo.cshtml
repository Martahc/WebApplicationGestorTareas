@model WebApplicationGestorTareas.Models.CastigoDto

@{
    ViewBag.Title = "Create";
}

<h2>Crear castigo</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <h4>Castigo</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Plazo, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.Plazo, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">días</span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Plazo, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Crear castigo" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
